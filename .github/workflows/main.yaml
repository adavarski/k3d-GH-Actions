name: CICD

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: ["3.10.15"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Linter
        run: |
          pylint *.py
          pylint tests/

      - name: Run Tests
        run: |
          python -m pytest

      - name: Login to DockerHub
        id: dockerhub-login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build, tag, and push image to DockerHub
        id: build-image
        run: |
           git_hash=$(git rev-parse --short "$GITHUB_SHA")
           echo '\n\n=== Building image ===\n\n'
           docker build -t davarski/demo-gh-actions:${GITHUB_REF##*/}-$git_hash .
           echo '\n\n=== Pushing image ===\n\n'
           docker push davarski/demo-gh-actions:${GITHUB_REF##*/}-$git_hash

      - name: Update Version
        run: |
            echo '\n\n=== Update Version ===\n\n'
            git_hash=$(git rev-parse --short "$GITHUB_SHA")
            version=$(cat ./helm/values.yaml | grep version: | awk '{print $2}')
            sed -i "s/$version/${GITHUB_REF##*/}-$git_hash/" ./helm/values.yaml
          
      - uses: AbsaOSS/k3d-action@v2
        name: "Create single k3d Cluster with imported Registry"
        with:
          cluster-name: CICD-test-cluster
          args: >-
            --agents 3
            --no-lb
            --k3s-arg "--no-deploy=traefik,servicelb,metrics-server@server:*"
      - name: "Helm deploy and test"
        run: |
           helm install -n default demo-gh-actions ./helm
           echo '\n\n=== Testing app ===\n\n'
           kubectl get pods -n default -o jsonpath='{range .items[*]}{"\n"}{.metadata.name}{":\t"}{range .spec.containers[*]}{.image}{", "}{end}{end}'

      - name: Update Helm Chart (Commit and Push changes for ArgoCD)
        uses: devops-infra/action-commit-push@v0.3
        with:
          github_token: ${{ secrets.GHAT }}
          commit_message: Version updated




